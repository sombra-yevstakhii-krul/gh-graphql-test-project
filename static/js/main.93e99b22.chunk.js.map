{"version":3,"sources":["assets/img/icons/github-icon.svg","data/config.ts","components/Login/Login.tsx","queries/user.ts","components/UsersList/UsersListItem.tsx","components/UsersList/UsersList.tsx","hooks/useMeasure.ts","queries/repo.ts","components/ReadmeModal/ReadmeModal.tsx","components/UserRepos/UserReposLoading.tsx","components/UserRepos/UserRepos.tsx","hooks/useMasonryGrid.ts","components/UserRepos/UserReposContainer.tsx","graphql/ClientProvider.tsx","components/AppContainer/AppContainer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","config","githubClientId","process","githubClientSecret","gatekeeperUrl","Login","open","Dialog","Box","px","py","pb","Typography","component","variant","align","display","color","href","USERS_AVATARS_QUERY","gql","USER_REPOS_QUERY","StyledChip","withTheme","styled","Chip","theme","palette","text","secondary","LoadingChip","attrs","avatar","Avatar","UsersListItem","login","selected","onClick","useQuery","variables","data","loading","src","user","avatarUrl","label","UsersList","selectedUsers","toggleSelectedUser","flexWrap","justifyContent","maxWidth","mt","mb","users","map","includes","useMeasure","useRef","useState","left","top","bounds","set","ResizeObserver","contentRect","window","requestAnimationFrame","observer","useLayoutEffect","current","observe","disconnect","README_QUERY","ADD_STAR_MUTATION","REMOVE_STAR_MUTATION","SUBSCRIPTION_MUTATION","FOLLOW_USER_MUTATION","UNFOLLOW_USER_MUTATION","ReadmeModal","repoId","onClose","skip","Skeleton","node","object","RoundedSkeleton","UserReposLoading","p","overflow","Grid","container","spacing","direction","item","wrap","ReadmeButton","Button","UserRepos","setHeight","prevHeight","phase","pollInterval","error","useMutation","refetchQueries","query","addStar","removeStar","followUser","unfollowUser","setSubscriptionStatus","readmeRepoId","setReadmeRepoId","Paper","followers","totalCount","icon","viewerIsFollowing","Remove","Add","userId","id","repositories","nodes","repo","Divider","pt","className","name","dangerouslySetInnerHTML","__html","descriptionHTML","stargazers","viewerHasStarred","watchers","viewerSubscription","state","issues","forkCount","columnsCountByQuery","calcColumnsCount","itemsCount","queries","media","Math","min","find","_","matchMedia","matches","tokenPromise","List","div","AnimatedItem","animated","UserReposContainer","items","measureRef","containerWidth","itemsHeights","setItemsHeights","columnsCount","setColumnsCount","newColumnsCount","queryChangeHandler","e","forEach","addListener","removeListener","columnsHeights","Array","gridItems","child","columnIndex","transitions","useTransition","from","opacity","enter","update","leave","mass","tension","friction","trail","setItemHeight","value","prevHeights","useMasonryGrid","style","max","rest","transform","to","x","y","AppContainer","filter","random","setSelectedUsers","useCallback","prevSelectedUsers","without","flexDirection","alignItems","httpLink","createHttpLink","uri","errorLink","onError","networkError","operation","forward","Observable","addEventListener","subscriber","next","bind","subscribe","once","authLink","setContext","headers","Promise","resolve","token","localStorage","getItem","resolveToken","authorization","then","code","URLSearchParams","location","search","get","fetch","res","json","newToken","Error","setItem","catch","toast","finally","history","replaceState","pathname","cache","InMemoryCache","link","ApolloLink","ClientProvider","children","client","setClient","useEffect","offlineToastId","persistCache","storage","ApolloClient","onOffline","autoClose","onOnline","render","type","TYPE","SUCCESS","removeEventListener","createMuiTheme","primary","main","GlobalStyles","createGlobalStyle","App","cachedToken","urlCode","ThemeProvider","StylesProvider","injectFirst","position","newestOnTop","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","origin","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.93e99b22.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M91.6464 214.988C91.6464 216.092 90.3758 216.976 88.7738 216.976C86.9508 217.141 85.6802 216.258 85.6802 214.988C85.6802 213.884 86.9508 213 88.5528 213C90.2101 212.835 91.6464 213.718 91.6464 214.988ZM74.4661 212.504C74.0794 213.608 75.1843 214.878 76.8415 215.209C78.2778 215.761 79.9351 215.209 80.2665 214.105C80.598 213 79.5484 211.731 77.8911 211.234C76.4548 210.847 74.8528 211.399 74.4661 212.504ZM98.8831 211.565C97.2811 211.951 96.1762 213 96.3419 214.27C96.5077 215.374 97.944 216.092 99.6012 215.706C101.203 215.319 102.308 214.27 102.142 213.166C101.977 212.117 100.485 211.399 98.8831 211.565ZM135.232 0C58.6117 0 0 58.1362 0 134.713C0 195.941 38.5589 248.335 93.6351 266.775C100.706 268.045 103.192 263.683 103.192 260.095C103.192 256.672 103.026 237.79 103.026 226.196C103.026 226.196 64.3569 234.477 56.2363 209.743C56.2363 209.743 49.9387 193.677 40.879 189.536C40.879 189.536 28.2286 180.868 41.7629 181.034C41.7629 181.034 55.5181 182.138 63.0863 195.278C75.1843 216.589 95.4581 210.461 103.358 206.817C104.628 197.983 108.219 191.855 112.196 188.211C81.3161 184.788 50.1597 180.316 50.1597 127.204C50.1597 112.021 54.3581 104.402 63.1968 94.6853C61.7605 91.0966 57.0649 76.3003 64.6331 57.1976C76.1786 53.609 102.75 72.1043 102.75 72.1043C113.798 69.0126 125.675 67.4115 137.442 67.4115C149.208 67.4115 161.085 69.0126 172.134 72.1043C172.134 72.1043 198.705 53.5538 210.251 57.1976C217.819 76.3555 213.123 91.0966 211.687 94.6853C220.526 104.457 225.94 112.076 225.94 127.204C225.94 180.482 193.402 184.733 162.522 188.211C167.604 192.573 171.913 200.854 171.913 213.829C171.913 232.434 171.747 255.457 171.747 259.984C171.747 263.573 174.288 267.934 181.304 266.665C236.546 248.335 274 195.941 274 134.713C274 58.1362 211.853 0 135.232 0ZM53.6952 190.42C52.977 190.972 53.1427 192.241 54.0819 193.29C54.9657 194.174 56.2363 194.56 56.9544 193.843C57.6726 193.29 57.5069 192.021 56.5677 190.972C55.6839 190.088 54.4133 189.702 53.6952 190.42ZM47.729 185.947C47.3423 186.665 47.8948 187.549 48.9996 188.101C49.8835 188.653 50.9883 188.487 51.375 187.714C51.7617 186.996 51.2093 186.113 50.1044 185.561C48.9996 185.23 48.1157 185.395 47.729 185.947ZM65.6274 205.602C64.7436 206.32 65.075 207.976 66.3456 209.025C67.6161 210.295 69.2181 210.461 69.9363 209.577C70.6544 208.86 70.323 207.203 69.2181 206.154C68.0028 204.885 66.3456 204.719 65.6274 205.602ZM59.3298 197.486C58.446 198.039 58.446 199.474 59.3298 200.744C60.2137 202.014 61.7052 202.566 62.4234 202.014C63.3073 201.296 63.3073 199.86 62.4234 198.591C61.65 197.321 60.2137 196.769 59.3298 197.486Z\",\n  fill: \"black\"\n});\n\nvar SvgGithubIcon = function SvgGithubIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 274,\n    height: 267,\n    viewBox: \"0 0 274 267\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgGithubIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/github-icon.5b9a3215.svg\";\nexport { ForwardRef as ReactComponent };","const config = {\n  githubClientId: process.env.REACT_APP_GITHUB_CLIENT_ID as string,\n  githubClientSecret: process.env.REACT_APP_GITHUB_CLIENT_SECRET as string,\n  gatekeeperUrl:\n    process.env.REACT_APP_ENV === 'production'\n      ? 'https://gh-graphql-test-project.herokuapp.com'\n      : 'http://localhost:9999',\n};\n\nexport default config;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog, Typography, Box } from '@material-ui/core';\nimport { ReactComponent as GithubIcon } from 'assets/img/icons/github-icon.svg';\nimport config from 'data/config';\n\ninterface PropTypes {\n  open: boolean;\n}\n\nconst Login: React.FC<PropTypes> = ({ open }) => {\n  return (\n    <Dialog open={open}>\n      <Box px={[3, 5, 15]} py={4}>\n        <Box pb={4}>\n          <GithubIcon />\n        </Box>\n        <Typography\n          component=\"a\"\n          variant=\"h4\"\n          align=\"center\"\n          display=\"block\"\n          color=\"primary\"\n          // eslint-disable-next-line max-len\n          href={`https://github.com/login/oauth/authorize?client_id=${config.githubClientId}&scope=repo%20user%20notifications`}\n        >\n          Login using github\n        </Typography>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default Login;\n","import gql from 'graphql-tag';\n\nexport const USERS_AVATARS_QUERY = gql`\n  query usersAvatarsQuery($login: String!) {\n    user(login: $login) {\n      avatarUrl(size: 55)\n    }\n  }\n`;\n\nexport interface UserReposQuery {\n  user: {\n    id: string;\n    avatarUrl: string;\n    followers: {\n      totalCount: number;\n    };\n    repositories: {\n      nodes: Array<{\n        issues: {\n          totalCount: number;\n        };\n        forkCount: number;\n        id: string;\n        stargazers: {\n          totalCount: number;\n        };\n        viewerHasStarred: boolean;\n        viewerSubscription: 'SUBSCRIBED' | 'UNSUBSCRIBED' | 'IGNORED';\n        watchers: {\n          totalCount: number;\n        };\n        descriptionHTML: string;\n        name: string;\n      }>;\n    };\n    login: string;\n    viewerIsFollowing: boolean;\n  };\n}\n\nexport interface UserReposVars {\n  login: string;\n}\n\nexport const USER_REPOS_QUERY = gql`\n  query userRepos($login: String!) {\n    user(login: $login) {\n      id\n      avatarUrl(size: 55)\n      followers {\n        totalCount\n      }\n      repositories(last: 10) {\n        nodes {\n          issues {\n            totalCount\n          }\n          forkCount\n          id\n          stargazers {\n            totalCount\n          }\n          viewerHasStarred\n          viewerSubscription\n          watchers {\n            totalCount\n          }\n          descriptionHTML\n          name\n        }\n      }\n      login\n      viewerIsFollowing\n    }\n  }\n`;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Chip, Avatar } from '@material-ui/core';\nimport { withTheme } from '@material-ui/core/styles';\nimport styled from 'styled-components';\nimport { USERS_AVATARS_QUERY } from 'queries/user';\n\nconst StyledChip = withTheme(styled(Chip)`\n  margin: 20px;\n  font-size: 14px;\n  color: ${(props): string => props.theme.palette?.text?.secondary};\n  &.MuiChip-colorPrimary {\n    color: #eeeeee;\n  }\n  .MuiAvatar-root.MuiChip-avatar {\n    margin-left: 0;\n    width: 32px;\n    height: 32px;\n  }\n`);\n\nconst LoadingChip = styled(StyledChip).attrs({ color: 'default', avatar: <Avatar /> })`\n  .MuiChip-label {\n    width: 120px;\n  }\n`;\n\ninterface PropTypes {\n  login: string;\n  selected: boolean;\n  onClick: () => void;\n}\n\nconst UsersListItem: React.FC<PropTypes> = ({ login, selected, onClick }) => {\n  const { data, loading } = useQuery(USERS_AVATARS_QUERY, {\n    variables: { login },\n  });\n\n  return loading ? (\n    <LoadingChip />\n  ) : (\n    <StyledChip\n      color={selected ? 'primary' : 'default'}\n      avatar={<Avatar src={data?.user?.avatarUrl} />}\n      label={loading ? '' : login}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default UsersListItem;\n","import React from 'react';\nimport users from 'data/users.json';\nimport UsersListItem from './UsersListItem';\nimport { Box } from '@material-ui/core';\n\ninterface PropTypes {\n  selectedUsers: string[];\n  toggleSelectedUser: (user: string) => void;\n}\n\nconst UsersList: React.FC<PropTypes> = ({ selectedUsers, toggleSelectedUser }) => {\n  return (\n    <Box\n      display=\"flex\"\n      flexWrap=\"wrap\"\n      justifyContent=\"center\"\n      maxWidth={900}\n      width=\"90%\"\n      mt={7}\n      mb={12}\n    >\n      {users.map(user => (\n        <UsersListItem\n          login={user}\n          selected={selectedUsers.includes(user)}\n          onClick={(): void => toggleSelectedUser(user)}\n          key={user}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default UsersList;\n","import { useRef, useState, useLayoutEffect, RefObject } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport default function useMeasure(): [\n  RefObject<HTMLDivElement>,\n  { left: number; top: number; width: number; height: number }\n] {\n  const ref = useRef<HTMLDivElement>(null);\n  const [bounds, set] = useState({ left: 0, top: 0, width: 0, height: 0 });\n  const [observer] = useState(\n    () =>\n      new ResizeObserver(([{ contentRect }]) =>\n        window.requestAnimationFrame(() => set(contentRect))\n      )\n  );\n  useLayoutEffect(() => {\n    if (ref.current) {\n      observer.observe(ref.current);\n      return (): void => observer.disconnect();\n    }\n  }, [observer]);\n  return [ref, bounds];\n}\n","import gql from 'graphql-tag';\n\nexport const README_QUERY = gql`\n  query readme($repoId: ID!) {\n    node(id: $repoId) {\n      ... on Repository {\n        object(expression: \"HEAD:README.md\") {\n          ... on Blob {\n            text\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_STAR_MUTATION = gql`\n  mutation addStar($repoId: ID!) {\n    addStar(input: { starrableId: $repoId }) {\n      starrable {\n        viewerHasStarred\n      }\n    }\n  }\n`;\n\nexport const REMOVE_STAR_MUTATION = gql`\n  mutation removeStar($repoId: ID!) {\n    removeStar(input: { starrableId: $repoId }) {\n      starrable {\n        viewerHasStarred\n      }\n    }\n  }\n`;\n\nexport const SUBSCRIPTION_MUTATION = gql`\n  mutation subscribe($repoId: ID!, $state: SubscriptionState!) {\n    updateSubscription(input: { subscribableId: $repoId, state: $state }) {\n      subscribable {\n        viewerSubscription\n      }\n    }\n  }\n`;\n\nexport const FOLLOW_USER_MUTATION = gql`\n  mutation followUser($userId: ID!) {\n    followUser(input: { userId: $userId }) {\n      user {\n        viewerIsFollowing\n      }\n      clientMutationId\n    }\n  }\n`;\n\nexport const UNFOLLOW_USER_MUTATION = gql`\n  mutation unfollowUser($userId: ID!) {\n    unfollowUser(input: { userId: $userId }) {\n      user {\n        viewerIsFollowing\n      }\n      clientMutationId\n    }\n  }\n`;\n","import React from 'react';\nimport { Dialog, Box } from '@material-ui/core';\nimport { useQuery } from '@apollo/react-hooks';\nimport { README_QUERY } from 'queries/repo';\nimport ReactMarkdown from 'react-markdown';\nimport { Skeleton } from '@material-ui/lab';\n\ninterface PropTypes {\n  repoId: string | null;\n  open: boolean;\n  onClose: () => void;\n}\n\nconst ReadmeModal: React.FC<PropTypes> = ({ repoId, open, onClose }) => {\n  const { data, loading } = useQuery(README_QUERY, {\n    variables: { repoId },\n    skip: !open || !repoId,\n  });\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth={false}>\n      <Box px={4} py={2} maxWidth=\"800px\">\n        {loading ? (\n          <>\n            <Skeleton width={100} height={20} />\n            <Skeleton width={300} height={16} />\n            <Skeleton width={320} height={16} />\n            <Skeleton width={290} height={16} />\n            <Skeleton width={280} height={16} />\n          </>\n        ) : (\n          <ReactMarkdown\n            source={data?.node.object ? data?.node.object.text : '## No README.md file available'}\n          />\n        )}\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default ReadmeModal;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Box, Grid } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\n\nconst RoundedSkeleton = styled(Skeleton).attrs({ variant: 'rect' })`\n  border-radius: 50px;\n`;\n\nconst UserReposLoading: React.FC = () => (\n  <Box p={3} mb={3} overflow=\"hidden\">\n    <Grid container spacing={2} direction=\"column\">\n      <Grid item container spacing={2} wrap=\"nowrap\">\n        <Grid item>\n          <Skeleton variant=\"circle\" width={55} height={55} />\n        </Grid>\n        <Grid item>\n          <Skeleton width={190} height={30} />\n          <RoundedSkeleton width={100} height={20} />\n        </Grid>\n      </Grid>\n      <Skeleton width={135} height={18} />\n      <Skeleton width={250} height={12} />\n      <Skeleton width={280} height={12} />\n      <Skeleton width={90} height={12} />\n      <Grid item container spacing={2} wrap=\"nowrap\">\n        <Grid item>\n          <RoundedSkeleton width={115} height={34} />\n        </Grid>\n        <Grid item>\n          <RoundedSkeleton width={125} height={34} />\n        </Grid>\n      </Grid>\n      <Grid item container spacing={2} wrap=\"nowrap\">\n        <Grid item>\n          <RoundedSkeleton width={90} height={34} />\n        </Grid>\n        <Grid item>\n          <RoundedSkeleton width={95} height={34} />\n        </Grid>\n      </Grid>\n    </Grid>\n  </Box>\n);\n\nexport default UserReposLoading;\n","import React, { useLayoutEffect, Fragment, useState } from 'react';\nimport { Paper, Box, Grid, Avatar, Typography, Chip, Button, Divider } from '@material-ui/core';\nimport useMeasure from 'hooks/useMeasure';\nimport { TransitionPhase } from 'react-spring';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { USER_REPOS_QUERY, UserReposQuery, UserReposVars } from 'queries/user';\nimport { Add, Remove } from '@material-ui/icons';\nimport styled from 'styled-components';\nimport ReadmeModal from 'components/ReadmeModal/ReadmeModal';\nimport {\n  REMOVE_STAR_MUTATION,\n  ADD_STAR_MUTATION,\n  UNFOLLOW_USER_MUTATION,\n  SUBSCRIPTION_MUTATION,\n  FOLLOW_USER_MUTATION,\n} from 'queries/repo';\nimport UserReposLoading from 'components/UserRepos/UserReposLoading';\n\nconst ReadmeButton = styled(Button)`\n  font-weight: normal;\n`;\n\ninterface PropTypes {\n  login: string;\n  setHeight: (value: number) => void;\n  height: number;\n  phase: TransitionPhase;\n}\n\nconst UserRepos: React.FC<PropTypes> = ({ login, setHeight, height: prevHeight, phase }) => {\n  const { data, loading, error } = useQuery<UserReposQuery, UserReposVars>(USER_REPOS_QUERY, {\n    variables: { login },\n    pollInterval: 60000,\n  });\n\n  const [addStar] = useMutation(ADD_STAR_MUTATION, {\n    refetchQueries: [{ query: USER_REPOS_QUERY, variables: { login } }],\n  });\n  const [removeStar] = useMutation(REMOVE_STAR_MUTATION, {\n    refetchQueries: [{ query: USER_REPOS_QUERY, variables: { login } }],\n  });\n  const [followUser] = useMutation(FOLLOW_USER_MUTATION, {\n    refetchQueries: [{ query: USER_REPOS_QUERY, variables: { login } }],\n  });\n  const [unfollowUser] = useMutation(UNFOLLOW_USER_MUTATION, {\n    refetchQueries: [{ query: USER_REPOS_QUERY, variables: { login } }],\n  });\n  const [setSubscriptionStatus] = useMutation(SUBSCRIPTION_MUTATION, {\n    refetchQueries: [{ query: USER_REPOS_QUERY, variables: { login } }],\n  });\n\n  const [ref, { height }] = useMeasure();\n\n  const [readmeRepoId, setReadmeRepoId] = useState<string | null>(null);\n\n  useLayoutEffect(() => {\n    if (prevHeight !== height && phase === 'update') {\n      setHeight(height);\n    }\n  }, [height, phase, prevHeight, setHeight]);\n\n  return (\n    <Paper ref={ref}>\n      {loading || error ? (\n        <UserReposLoading />\n      ) : (\n        <>\n          <ReadmeModal\n            open={!!readmeRepoId}\n            repoId={readmeRepoId}\n            onClose={(): void => setReadmeRepoId(null)}\n          />\n          <Box p={3} mb={3} overflow=\"hidden\">\n            <Grid container spacing={2} direction=\"column\">\n              <Grid item container spacing={2} wrap=\"nowrap\">\n                <Grid item>\n                  <Avatar src={data?.user.avatarUrl}></Avatar>\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"h6\">{data?.user.login}</Typography>\n                  <Chip\n                    label={`Follow (${data?.user.followers.totalCount})`}\n                    icon={data?.user.viewerIsFollowing ? <Remove /> : <Add />}\n                    color={data?.user.viewerIsFollowing ? 'primary' : 'default'}\n                    onClick={(): void => {\n                      data?.user.viewerIsFollowing\n                        ? unfollowUser({ variables: { userId: data?.user.id } })\n                        : followUser({ variables: { userId: data?.user.id } });\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              {data?.user.repositories.nodes.map((repo, i) => (\n                <Fragment key={repo.id}>\n                  {i !== 0 && <Divider />}\n                  <Box pt={1} pb={3} className=\"repo\">\n                    <Box display=\"flex\" justifyContent=\"space-between\">\n                      <Typography variant=\"body1\">{repo.name}</Typography>\n                      <ReadmeButton\n                        variant=\"text\"\n                        color=\"primary\"\n                        onClick={(): void => setReadmeRepoId(repo.id)}\n                      >\n                        View README.md\n                      </ReadmeButton>\n                    </Box>\n                    <Box pt={1} pb={2}>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        dangerouslySetInnerHTML={{ __html: repo.descriptionHTML }}\n                      />\n                    </Box>\n                    <Grid item container spacing={2} wrap=\"nowrap\">\n                      <Grid item>\n                        <Chip\n                          label={`Stars (${repo.stargazers.totalCount})`}\n                          icon={repo.viewerHasStarred ? <Remove /> : <Add />}\n                          color={repo.viewerHasStarred ? 'primary' : 'default'}\n                          onClick={(): void => {\n                            repo.viewerHasStarred\n                              ? removeStar({ variables: { repoId: repo.id } })\n                              : addStar({ variables: { repoId: repo.id } });\n                          }}\n                        />\n                      </Grid>\n                      <Grid item>\n                        <Chip\n                          label={`Watching (${repo.watchers.totalCount})`}\n                          icon={repo.viewerSubscription === 'SUBSCRIBED' ? <Remove /> : <Add />}\n                          color={repo.viewerSubscription === 'SUBSCRIBED' ? 'primary' : 'default'}\n                          onClick={(): void => {\n                            setSubscriptionStatus({\n                              variables: {\n                                repoId: repo.id,\n                                state:\n                                  repo.viewerSubscription === 'SUBSCRIBED'\n                                    ? 'UNSUBSCRIBED'\n                                    : 'SUBSCRIBED',\n                              },\n                            });\n                          }}\n                        />\n                      </Grid>\n                    </Grid>\n                    <Grid item container spacing={2} wrap=\"nowrap\">\n                      <Grid item>\n                        <Chip label={`Issues (${repo.issues.totalCount})`} />\n                      </Grid>\n                      <Grid item>\n                        <Chip label={`Forks (${repo.forkCount})`} />\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </Fragment>\n              ))}\n            </Grid>\n          </Box>\n        </>\n      )}\n    </Paper>\n  );\n};\n\nexport default UserRepos;\n","import { useState, RefObject, useLayoutEffect } from 'react';\nimport { useTransition, ItemTransition } from 'react-spring';\nimport useMeasure from 'hooks/useMeasure';\nimport find from 'lodash/find';\nimport forEach from 'lodash/forEach';\n\nconst columnsCountByQuery: { [query: string]: number } = {\n  '(min-width: 1100px)': 3,\n  '(max-width: 1099px) and (min-width: 768px)': 2,\n  '(max-width: 767px)': 1,\n};\n\nconst calcColumnsCount = (\n  itemsCount: number,\n  queries: { [query: string]: number },\n  media?: string\n): number =>\n  Math.min(\n    find(queries, (_, query) => (media ? query === media : window.matchMedia(query).matches)) || 3,\n    itemsCount\n  );\n\nexport type Transitions = ItemTransition<{\n  login: string;\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n}>[];\n\nexport default function useMasonryGrid(\n  items: string[]\n): {\n  transitions: Transitions;\n  measureRef: RefObject<HTMLDivElement>;\n  setItemHeight: (i: string) => (value: number) => void;\n  columnsHeights: number[];\n  itemsHeights: { [user: string]: number };\n} {\n  const [measureRef, { width: containerWidth }] = useMeasure();\n\n  const [itemsHeights, setItemsHeights] = useState<{ [user: string]: number }>({});\n  const setItemHeight = (i: string) => (value: number): void => {\n    setItemsHeights(prevHeights => ({ ...prevHeights, [i]: value }));\n  };\n\n  const [columnsCount, setColumnsCount] = useState<number>(\n    calcColumnsCount(items.length, columnsCountByQuery)\n  );\n\n  useLayoutEffect(() => {\n    const newColumnsCount = calcColumnsCount(items.length, columnsCountByQuery);\n    if (columnsCount !== newColumnsCount) setColumnsCount(newColumnsCount);\n\n    const queryChangeHandler = (e: MediaQueryListEvent): void => {\n      if (e.matches) setColumnsCount(calcColumnsCount(items.length, columnsCountByQuery, e.media));\n    };\n\n    forEach(columnsCountByQuery, (_, query) => {\n      window.matchMedia(query).addListener(queryChangeHandler);\n    });\n\n    return (): void => {\n      forEach(columnsCountByQuery, (_, query) => {\n        window.matchMedia(query).removeListener(queryChangeHandler);\n      });\n    };\n  }, [columnsCount, items.length]);\n\n  const columnsHeights = Array(columnsCount).fill(0);\n  const gridItems = items.map(child => {\n    const columnIndex = columnsHeights.indexOf(Math.min(...columnsHeights));\n    // Basic masonry-grid placing, puts tile into the smallest column using Math.min\n\n    const left = (containerWidth / columnsCount) * columnIndex;\n    const top = columnsHeights[columnIndex];\n    columnsHeights[columnIndex] += itemsHeights[child] + 30 || 0;\n    // X = container width / number of columns * column index, Y = height of the\n    // current column + 30px margin\n\n    return {\n      login: child,\n      left,\n      top,\n      width: containerWidth / columnsCount,\n      height: itemsHeights[child] || 0,\n    };\n  });\n\n  const transitions = useTransition(gridItems, (item: { login: string }) => item.login, {\n    from: ({ left, top, width, height }) => ({ left, top, width, height, opacity: 0 }),\n    enter: ({ left, top, width, height }) => ({ left, top, width, height, opacity: 1 }),\n    update: ({ left, top, width, height }) => ({ left, top, width, height }),\n    leave: { height: 0, opacity: 0 },\n    config: { mass: 1, tension: 500, friction: 40 },\n    trail: 25,\n  });\n\n  return { transitions, measureRef, setItemHeight, columnsHeights, itemsHeights };\n}\n","import React from 'react';\nimport { animated, to } from 'react-spring';\nimport styled from 'styled-components';\nimport UserRepos from 'components/UserRepos/UserRepos';\nimport useMasonryGrid from 'hooks/useMasonryGrid';\n\nconst List = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 1250px;\n  height: 100%;\n`;\n\nconst AnimatedItem = styled(animated.div)`\n  position: absolute;\n  will-change: transform, width, height, opacity;\n  padding: 15px;\n  box-sizing: border-box;\n`;\n\ninterface PropTypes {\n  selectedUsers: string[];\n}\n\n// The idea is taken from https://codesandbox.io/embed/26mjowzpr\n\nconst UserReposContainer: React.FC<PropTypes> = ({ selectedUsers }) => {\n  const { transitions, measureRef, setItemHeight, columnsHeights, itemsHeights } = useMasonryGrid(\n    selectedUsers\n  );\n\n  return (\n    <List ref={measureRef} style={{ height: Math.max(...columnsHeights) }}>\n      {transitions.map(({ item: { login }, props: { left, top, ...rest }, key, phase }) => (\n        <AnimatedItem\n          key={key}\n          style={{\n            transform: to([left, top], (x: number, y: number) => `translate3d(${x}px,${y}px,0)`),\n            ...rest,\n          }}\n        >\n          <UserRepos\n            login={login}\n            setHeight={setItemHeight(login)}\n            phase={phase}\n            height={itemsHeights[login]}\n          />\n        </AnimatedItem>\n      ))}\n    </List>\n  );\n};\n\nexport default UserReposContainer;\n","import React, { useState, useEffect } from 'react';\nimport { NormalizedCacheObject, InMemoryCache, ApolloLink } from 'apollo-boost';\nimport { PersistentStorage, PersistedData } from 'apollo-cache-persist/types';\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { Observable } from 'apollo-link';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { onError } from 'apollo-link-error';\nimport { toast, ToastId } from 'react-toastify';\nimport config from 'data/config';\nimport { persistCache } from 'apollo-cache-persist';\n\nconst httpLink = createHttpLink({\n  uri: 'https://api.github.com/graphql',\n});\n\nconst errorLink = onError(\n  ({ networkError, operation, forward }) =>\n    new Observable(observer => {\n      if (networkError) {\n        window.addEventListener(\n          'online',\n          (): void => {\n            const subscriber = {\n              next: observer.next.bind(observer),\n            };\n            forward(operation).subscribe(subscriber);\n          },\n          { once: true }\n        );\n      }\n    })\n);\n\nlet tokenPromise: Promise<string | void> | undefined;\n// Each request made before the token is fetched will run only after the promise finishes\n\nconst authLink = setContext(\n  (_, { headers }) =>\n    new Promise(resolve => {\n      // Async/await wouldn't suffice because useQuery hooks should return loading: true until\n      // token is fetched, which is achivable only if this promise never resolves without token\n      const token = localStorage.getItem('token');\n      const resolveToken = (token: string | void): string | void => {\n        resolve({\n          headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : '',\n          },\n        });\n        return token;\n      };\n      if (token) {\n        resolveToken(token);\n      } else if (tokenPromise) {\n        tokenPromise.then(resolveToken);\n      } else {\n        const code = new URLSearchParams(window.location.search).get('code');\n        if (!code) return;\n        // gatekeeper is needed due to https://github.com/isaacs/github/issues/330\n        tokenPromise = fetch(`${config.gatekeeperUrl}/authenticate/${code}`)\n          .then(res => res.json())\n          .then(({ token: newToken }): string | void => {\n            if (!newToken) throw new Error();\n            localStorage.setItem('token', newToken);\n            return resolveToken(newToken);\n          })\n          .catch(() => {\n            toast.error(\"Couldn't login!\");\n          })\n          .finally(() => {\n            window.history.replaceState({}, '', window.location.pathname);\n          });\n      }\n    })\n);\n\nconst cache = new InMemoryCache();\nconst link = ApolloLink.from([errorLink, authLink, httpLink]);\n\nconst ClientProvider: React.FC = ({ children }) => {\n  const [client, setClient] = useState();\n\n  useEffect(() => {\n    persistCache({\n      cache,\n      storage: window.localStorage as PersistentStorage<PersistedData<NormalizedCacheObject>>,\n    }).then(() => {\n      setClient(\n        new ApolloClient({\n          link,\n          cache,\n        })\n      );\n    });\n\n    let offlineToastId: ToastId;\n    const onOffline = (): void => {\n      offlineToastId = toast.error('You are offline!', { autoClose: false });\n    };\n    const onOnline = (): void => {\n      toast.update(offlineToastId, {\n        render: 'You are back online!',\n        type: toast.TYPE.SUCCESS,\n        autoClose: 4000,\n      });\n    };\n\n    window.addEventListener('offline', onOffline);\n    window.addEventListener('online', onOnline);\n\n    return (): void => {\n      window.removeEventListener('offline', onOffline);\n      window.removeEventListener('online', onOnline);\n    };\n  }, []);\n\n  if (!client) return null;\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n};\n\nexport default ClientProvider;\n","import React, { useState, useCallback } from 'react';\nimport users from 'data/users.json';\nimport UsersList from 'components/UsersList/UsersList';\nimport without from 'lodash/without';\nimport { Box } from '@material-ui/core';\nimport UserReposContainer from 'components/UserRepos/UserReposContainer';\n\nconst AppContainer: React.FC = () => {\n  const [selectedUsers, setSelectedUsers] = useState(users.filter(() => Math.random() > 0.5));\n  const toggleSelectedUser = useCallback(user => {\n    setSelectedUsers(prevSelectedUsers => {\n      if (prevSelectedUsers.includes(user)) {\n        return without(prevSelectedUsers, user);\n      } else {\n        return [...prevSelectedUsers, user];\n      }\n    });\n  }, []);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n      <UsersList selectedUsers={selectedUsers} toggleSelectedUser={toggleSelectedUser} />\n      <UserReposContainer selectedUsers={selectedUsers} />\n    </Box>\n  );\n};\n\nexport default AppContainer;\n","import React from 'react';\nimport Login from 'components/Login/Login';\nimport { createMuiTheme, ThemeProvider, StylesProvider } from '@material-ui/core';\nimport AppContainer from 'components/AppContainer/AppContainer';\nimport { createGlobalStyle } from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\nimport ClientProvider from 'graphql/ClientProvider';\n\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: '#2196F3' },\n  },\n});\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    margin: 0;\n    background-color: #EEEEEE;\n    font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\nconst App: React.FC = () => {\n  const cachedToken = localStorage.getItem('token');\n  const urlCode = new URLSearchParams(window.location.search).get('code');\n\n  return (\n    <ClientProvider>\n      <ThemeProvider theme={theme}>\n        <StylesProvider injectFirst>\n          <ToastContainer position=\"bottom-right\" newestOnTop />\n          <Login open={!cachedToken && !urlCode} />\n          <AppContainer />\n          <GlobalStyles />\n        </StylesProvider>\n      </ThemeProvider>\n    </ClientProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}